{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/turambar/Projects/React-projects/stopwatch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction Stopwatch() {\n  _s();\n\n  const [timeOn, setTimeOn] = useState(false);\n  const [startTime, setStartTime] = useState(0);\n  const [timerCounter, setTimerCounter] = useState(0);\n\n  startTimer = () => {\n    setTimeOn(true);\n    setTimerCounter(timerCounter);\n    setStartTime(Date.now() - timerCounter);\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 10);\n  }; // stopTimer = () => {\n  //   this.setState({ timerOn: false });\n  //   clearInterval(this.timer);\n  // };\n  // resetTimer = () => {\n  //   this.setState({\n  //     timerStart: 0,\n  //     timerTime: 0\n  //   });\n  // };\n\n\n  const {\n    timerTime\n  } = this.state;\n  let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n  let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n  let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n  let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stopwatch\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Stopwatch-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stopwatch-display\",\n        children: [hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.startTimer,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stopwatch, \"spTFDvasLP5mHgElTy0zP5HJjBk=\");\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/home/turambar/Projects/React-projects/stopwatch/src/App.js"],"names":["useState","useEffect","Stopwatch","timeOn","setTimeOn","startTime","setStartTime","timerCounter","setTimerCounter","startTimer","Date","now","setState","timerOn","timerTime","state","timerStart","timer","setInterval","centiseconds","Math","floor","slice","seconds","minutes","hours"],"mappings":";;;;;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAuBJ,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;;AAGES,EAAAA,UAAU,GAAG,MAAM;AACjBL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,eAAe,CAACD,YAAD,CAAf;AACAD,IAAAA,YAAY,CAACI,IAAI,CAACC,GAAL,KAAaJ,YAAd,CAAZ;AACA,SAAKK,QAAL,CAAc;AACZC,MAAAA,OAAO,EAAE,IADG;AAEZC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAFV;AAGZE,MAAAA,UAAU,EAAEN,IAAI,CAACC,GAAL,KAAa,KAAKI,KAAL,CAAWD;AAHxB,KAAd;AAKA,SAAKG,KAAL,GAAaC,WAAW,CAAC,MAAM;AAC7B,WAAKN,QAAL,CAAc;AACZE,QAAAA,SAAS,EAAEJ,IAAI,CAACC,GAAL,KAAa,KAAKI,KAAL,CAAWC;AADvB,OAAd;AAGD,KAJuB,EAIrB,EAJqB,CAAxB;AAKD,GAdD,CANmB,CAsBnB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAMA,QAAM;AAAEF,IAAAA;AAAF,MAAgB,KAAKC,KAA3B;AACE,MAAII,YAAY,GAAG,CAAC,MAAOC,IAAI,CAACC,KAAL,CAAWP,SAAS,GAAG,EAAvB,IAA6B,GAArC,EAA2CQ,KAA3C,CAAiD,CAAC,CAAlD,CAAnB;AACA,MAAIC,OAAO,GAAG,CAAC,MAAOH,IAAI,CAACC,KAAL,CAAWP,SAAS,GAAG,IAAvB,IAA+B,EAAvC,EAA4CQ,KAA5C,CAAkD,CAAC,CAAnD,CAAd;AACA,MAAIE,OAAO,GAAG,CAAC,MAAOJ,IAAI,CAACC,KAAL,CAAWP,SAAS,GAAG,KAAvB,IAAgC,EAAxC,EAA6CQ,KAA7C,CAAmD,CAAC,CAApD,CAAd;AACA,MAAIG,KAAK,GAAG,CAAC,MAAML,IAAI,CAACC,KAAL,CAAWP,SAAS,GAAG,OAAvB,CAAP,EAAwCQ,KAAxC,CAA8C,CAAC,CAA/C,CAAZ;AACF,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,mBACKG,KADL,SACeD,OADf,SAC2BD,OAD3B,SACuCJ,YADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA,kBACC,KAAKJ,KAAL,CAAWF,OAAX,KAAuB,KAAvB,IAAgC,KAAKE,KAAL,CAAWD,SAAX,KAAyB,CAAzD,iBACG;AAAQ,UAAA,OAAO,EAAE,KAAKL,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAlEQP,S;;KAAAA,S;AAoET,eAAeA,SAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction Stopwatch() {\nconst [timeOn, setTimeOn ] = useState(false)\nconst [startTime, setStartTime] = useState(0);\nconst [timerCounter, setTimerCounter] = useState(0);\n\n\n  startTimer = () => {\n    setTimeOn(true);\n    setTimerCounter(timerCounter);\n    setStartTime(Date.now() - timerCounter)\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 10);\n  };\n\n  // stopTimer = () => {\n  //   this.setState({ timerOn: false });\n  //   clearInterval(this.timer);\n  // };\n\n  // resetTimer = () => {\n  //   this.setState({\n  //     timerStart: 0,\n  //     timerTime: 0\n  //   });\n  // };\n\n\n\n\n\n  const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n  return (\n    <div className=\"Stopwatch\">\n      <header className=\"Stopwatch-header\">\n      <div className=\"Stopwatch-display\">\n          {hours} : {minutes} : {seconds} : {centiseconds}\n      </div>\n      <div>\n      {this.state.timerOn === false && this.state.timerTime === 0 && (\n          <button onClick={this.startTimer}>Start</button>\n        )}\n        {/* {this.state.timerOn === true && (\n          <button onClick={this.stopTimer}>Stop</button>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <button onClick={this.startTimer}>Resume</button>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <button onClick={this.resetTimer}>Reset</button>\n        )} */}\n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}