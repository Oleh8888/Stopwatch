{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/turambar/Projects/React-projects/Stopwatch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time';\nimport { Observable } from \"rxjs\";\n\nfunction Stopwatch() {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  ;\n  const timerStream$ = new Observable(subscriber => {\n    subscriber.next(timer);\n    setTimeout(() => subscriber.next(startTimer, 1000));\n  });\n  timerStream$.subscribe(timer => console.log(timer));\n\n  const startTimer = () => {\n    setTimerOn(true);\n    timerStream$.subscribe(setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000));\n  }; // const stopTimer  = () => {\n  //   clearInterval(increment.current);\n  //   setTimer(0);\n  // }\n  //   const resetTimer = () => {\n  //     clearInterval(increment.current);\n  //     setTimerOn(false);\n  //     setTimer(0);\n  //     startTimer();\n  //   };\n  //   const waitTimer = () => {\n  //     clearInterval(increment.current);\n  //     setTimerOn(false);\n  //   };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stopwatch\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Stopwatch-header\",\n      children: [/*#__PURE__*/_jsxDEV(Time, {\n        timer: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flexbox, {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stopwatch, \"i0tXxExQ6quPjayJD6fz8X4rdOU=\");\n\n_c = Stopwatch;\nexport default Stopwatch; // import './App.css';\n// import { useState,useRef } from 'react';\n// import Flexbox from 'flexbox-react';\n// import Time from './components/Time/Time'\n// function Stopwatch() {\n// const [timer, setTimer ] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);\n// const increment = useRef(null);\n// const startTimer = () => {\n//     setTimerOn(true)\n//     increment.current = setInterval(() => {\n//       setTimer((timer) => timer + 1)\n//     }, 1000)\n//   }\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n//   const waitTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//   };\n//   return (\n//     <div className=\"Stopwatch\">\n//       <header className=\"Stopwatch-header\">\n//         <Time timer={timer}/>\n//       <div>\n//         <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n//           {!timerOn ? <button onClick={startTimer}>Start</button>\n//             : <button onClick={stopTimer}>Stop</button>\n//           }\n//            <button onDoubleClick={waitTimer}>Wait</button>\n//           <button onClick={resetTimer} >Reset</button>\n//           </Flexbox>\n//       </div>\n//       </header>\n//     </div>\n//   );\n// }\n// export default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/home/turambar/Projects/React-projects/Stopwatch/src/App.js"],"names":["useState","Flexbox","Time","Observable","Stopwatch","timer","setTimer","timerOn","setTimerOn","timerStream$","subscriber","next","setTimeout","startTimer","subscribe","console","log","setInterval"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,MAA3B;;AAIA,SAASC,SAAT,GAAqB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBN,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAA8C;AAE9C,QAAMS,YAAY,GAAG,IAAIN,UAAJ,CAAeO,UAAU,IAAI;AAChDA,IAAAA,UAAU,CAACC,IAAX,CAAgBN,KAAhB;AACAO,IAAAA,UAAU,CAAC,MAAMF,UAAU,CAACC,IAAX,CAAgBE,UAAhB,EAA2B,IAA3B,CAAP,CAAV;AACD,GAHoB,CAArB;AAKAJ,EAAAA,YAAY,CAACK,SAAb,CAAuBT,KAAK,IAAIU,OAAO,CAACC,GAAR,CAAYX,KAAZ,CAAhC;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACrBL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,YAAY,CAACK,SAAb,CAAuBG,WAAW,CAAC,MAAM;AACvCX,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD,KAFiC,EAE/B,IAF+B,CAAlC;AAGD,GALH,CAXqB,CAkBrB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEA;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,aAAa,EAAC,KAAvB;AAA6B,UAAA,cAAc,EAAC,QAA5C;AAAA,iCACE;AAAQ,YAAA,OAAO,EAAEQ,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnDQT,S;;KAAAA,S;AAqDT,eAAeA,SAAf,C,CAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import './App.css';\nimport { useState} from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time'\nimport { Observable } from \"rxjs\";\n\n\n\nfunction Stopwatch() {\nconst [timer, setTimer ] = useState(0);\nconst [timerOn, setTimerOn] = useState(false);;\n\nconst timerStream$ = new Observable(subscriber => {\n  subscriber.next(timer)\n  setTimeout(() => subscriber.next(startTimer,1000))\n});\n\ntimerStream$.subscribe(timer => console.log(timer));\n\nconst startTimer = () => {\n    setTimerOn(true)\n    timerStream$.subscribe(setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 1000))\n  }\n\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n\n//   const waitTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//   };\n\n  return (\n    <div className=\"Stopwatch\">\n      <header className=\"Stopwatch-header\">\n        <Time timer={timer}/>\n      <div>\n        <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n          <button onClick={startTimer}>Start</button>\n           {/* //   : <button onClick={stopTimer}>Stop</button>\n           \n          //  <button onDoubleClick={waitTimer}>Wait</button>\n          // <button onClick={resetTimer} >Reset</button> */}\n           </Flexbox> \n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n\n// import './App.css';\n// import { useState,useRef } from 'react';\n// import Flexbox from 'flexbox-react';\n// import Time from './components/Time/Time'\n\n\n\n\n// function Stopwatch() {\n// const [timer, setTimer ] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);\n// const increment = useRef(null);\n\n// const startTimer = () => {\n//     setTimerOn(true)\n//     increment.current = setInterval(() => {\n//       setTimer((timer) => timer + 1)\n//     }, 1000)\n//   }\n\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n\n//   const waitTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//   };\n\n//   return (\n//     <div className=\"Stopwatch\">\n//       <header className=\"Stopwatch-header\">\n//         <Time timer={timer}/>\n//       <div>\n//         <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n//           {!timerOn ? <button onClick={startTimer}>Start</button>\n//             : <button onClick={stopTimer}>Stop</button>\n//           }\n//            <button onDoubleClick={waitTimer}>Wait</button>\n//           <button onClick={resetTimer} >Reset</button>\n//           </Flexbox>\n//       </div>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}