{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/turambar/Projects/React-projects/Stopwatch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time';\nimport { interval } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nconst delay = 1000;\n\nconst App = () => {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  const [subscription, setSubscription] = useState(\"\");\n\n  const startTimer = () => {\n    setTimerOn(true);\n\n    if (!subscription) {\n      const timerSubscription = interval(delay).pipe(map(timer => timer + 1)).subscribe(t => setTimer(t + timer));\n      setSubscription(timerSubscription);\n    }\n  };\n\n  const stopTimer = () => {\n    subscription.unsubscribe();\n    setTimer(0);\n    setSubscription(\"\");\n    setTimerOn(false);\n  };\n\n  const resetTimer = () => {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n\n    const timerSubscription = interval(delay).subscribe(t => setTimer(t));\n    setSubscription(timerSubscription);\n  };\n\n  const waitTimer = () => {\n    subscription.unsubscribe();\n    setSubscription(\"\");\n    setTimerOn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stopwatch\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Stopwatch-header\",\n      children: [/*#__PURE__*/_jsxDEV(Time, {\n        timer: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flexbox, {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          children: [!timerOn ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopTimer,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onDoubleClick: waitTimer,\n            children: \"Wait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTimer,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"bHn4JVPnbh3LeJJdroX+fM8E2jE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/turambar/Projects/React-projects/Stopwatch/src/App.js"],"names":["useState","Flexbox","Time","interval","map","delay","App","timer","setTimer","timerOn","setTimerOn","subscription","setSubscription","startTimer","timerSubscription","pipe","subscribe","t","stopTimer","unsubscribe","resetTimer","waitTimer"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAT,QAAwB,MAAxB;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,MAAMC,KAAK,GAAG,IAAd;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBR,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMa,UAAU,GAAG,MAAM;AACvBH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI,CAACC,YAAL,EAAmB;AACjB,YAAMG,iBAAiB,GAAGX,QAAQ,CAACE,KAAD,CAAR,CACvBU,IADuB,CAClBX,GAAG,CAAEG,KAAD,IAAWA,KAAK,GAAG,CAApB,CADe,EAEvBS,SAFuB,CAEZC,CAAD,IAAOT,QAAQ,CAACS,CAAC,GAAGV,KAAL,CAFF,CAA1B;AAGAK,MAAAA,eAAe,CAACE,iBAAD,CAAf;AACD;AACA,GARH;;AAUE,QAAMI,SAAS,GAAI,MAAM;AACvBP,IAAAA,YAAY,CAACQ,WAAb;AACAX,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAI,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GALD;;AAOA,QAAMU,UAAU,GAAG,MAAM;AACvB,QAAIT,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACQ,WAAb;AACD;;AACD,UAAML,iBAAiB,GAAGX,QAAQ,CAACE,KAAD,CAAR,CAAgBW,SAAhB,CAA2BC,CAAD,IAAOT,QAAQ,CAACS,CAAD,CAAzC,CAA1B;AACAL,IAAAA,eAAe,CAACE,iBAAD,CAAf;AACD,GAND;;AAQA,QAAMO,SAAS,GAAG,MAAM;AACtBV,IAAAA,YAAY,CAACQ,WAAb;AACAP,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEH;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEA;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,aAAa,EAAC,KAAvB;AAA6B,UAAA,cAAc,EAAC,QAA5C;AAAA,qBACC,CAACE,OAAD,gBAAW;AAAQ,YAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,gBACM;AAAQ,YAAA,OAAO,EAAEK,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFP,eAII;AAAQ,YAAA,aAAa,EAAEG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKG;AAAQ,YAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CArDD;;GAAMd,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState} from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time'\nimport { interval} from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nconst delay = 1000;\nconst App = () => {\nconst [timer, setTimer ] = useState(0);\nconst [timerOn, setTimerOn] = useState(false);\nconst [subscription, setSubscription] = useState(\"\");\n\n\nconst startTimer = () => {\n  setTimerOn(true)\n  if (!subscription) {\n    const timerSubscription = interval(delay)\n      .pipe(map((timer) => timer + 1))\n      .subscribe((t) => setTimer(t + timer));\n    setSubscription(timerSubscription);\n  }\n  };\n\n  const stopTimer  = () => {\n    subscription.unsubscribe();\n    setTimer(0);\n    setSubscription(\"\");\n    setTimerOn(false)\n  }\n\n  const resetTimer = () => {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n    const timerSubscription = interval(delay).subscribe((t) => setTimer(t));\n    setSubscription(timerSubscription);   \n  };\n\n  const waitTimer = () => {\n    subscription.unsubscribe();\n    setSubscription(\"\");\n    setTimerOn(false)\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <header className=\"Stopwatch-header\">\n        <Time timer={timer}/>\n      <div>\n        <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n        {!timerOn ? <button onClick={startTimer}>Start</button>\n             : <button onClick={stopTimer}>Stop</button>\n           }\n            <button onDoubleClick={waitTimer}>Wait</button>\n           <button onClick={resetTimer} >Reset</button> \n        </Flexbox> \n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}