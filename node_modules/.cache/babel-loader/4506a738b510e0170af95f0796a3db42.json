{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/turambar/Projects/React-projects/Stopwatch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time';\nimport { interval, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nconst delay = 1000;\n\nfunction Stopwatch() {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [diff, setDiff] = useState(0); // const [timerOn, setTimerOn] = useState(false);;\n\n  const [subscription, setSubscription] = useState(\"\");\n  const [prevent, setPrevent] = useState(true);\n  let timerStream$ = new Observable(observer => {\n    const interval = setInterval(() => observer.next(timer => timer + 1), 1000);\n    return () => clearInterval(interval);\n  });\n\n  const startTimer = () => {\n    if (!subscription) {\n      const timerSubscription = interval(delay).pipe(map(v => v + 1)).subscribe(v => {\n        setTimer(v + diff);\n      });\n      setSubscription(timerSubscription);\n    } else {\n      subscription.unsubscribe();\n      setTimer(0);\n      setDiff(0);\n      setSubscription(\"\");\n    }\n  };\n\n  const stopTimer = () => {\n    if (prevent) {\n      setPrevent(false);\n      const timerInstance = setTimeout(function () {\n        setPrevent(true);\n        clearTimeout(timerInstance);\n      }, 300);\n    } else {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      setDiff(timer);\n      setSubscription(\"\");\n    }\n  };\n\n  const resetTimer = () => {};\n\n  const waitTimer = () => {\n    if (prevent) {\n      setPrevent(false);\n      const timerInstance = setTimeout(function () {\n        setPrevent(true);\n        clearTimeout(timerInstance);\n      }, 300);\n    } else {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      setDiff(timer);\n      setSubscription(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stopwatch\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Stopwatch-header\",\n      children: [/*#__PURE__*/_jsxDEV(Time, {\n        timer: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flexbox, {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          children: [!prevent ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopTimer,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onDoubleClick: waitTimer,\n            children: \"Wait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTimer,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stopwatch, \"8pq2dJMSZhBX1yEaxSBzo0d1Wk0=\");\n\n_c = Stopwatch;\nexport default Stopwatch; // import './App.css';\n// import { useState,useRef } from 'react';\n// import Flexbox from 'flexbox-react';\n// import Time from './components/Time/Time'\n// function Stopwatch() {\n// const [timer, setTimer ] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);\n// const increment = useRef(null);\n// const startTimer = () => {\n//     setTimerOn(true)\n//     increment.current = setInterval(() => {\n//       setTimer((timer) => timer + 1)\n//     }, 1000)\n//   }\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n// const waitTimer = () => {\n//   clearInterval(increment.current);\n//   setTimerOn(false);\n// };\n//   return (\n//     <div className=\"Stopwatch\">\n//       <header className=\"Stopwatch-header\">\n//         <Time timer={timer}/>\n//       <div>\n//         <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n//           {!timerOn ? <button onClick={startTimer}>Start</button>\n//             : <button onClick={stopTimer}>Stop</button>\n//           }\n//            <button onDoubleClick={waitTimer}>Wait</button>\n//           <button onClick={resetTimer} >Reset</button>\n//           </Flexbox>\n//       </div>\n//       </header>\n//     </div>\n//   );\n// }\n// export default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/home/turambar/Projects/React-projects/Stopwatch/src/App.js"],"names":["useState","useEffect","Flexbox","Time","interval","Observable","map","delay","Stopwatch","timer","setTimer","diff","setDiff","subscription","setSubscription","prevent","setPrevent","timerStream$","observer","setInterval","next","clearInterval","startTimer","timerSubscription","pipe","v","subscribe","unsubscribe","stopTimer","timerInstance","setTimeout","clearTimeout","resetTimer","waitTimer"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect} from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time'\nimport { interval, Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nconst delay = 1000;\n\nfunction Stopwatch() {\nconst [timer, setTimer ] = useState(0);\nconst [diff, setDiff] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);;\nconst [subscription, setSubscription] = useState(\"\");\nconst [prevent, setPrevent] = useState(true);\n\nlet timerStream$ = new Observable(observer => {\n    const interval = setInterval(() => observer.next(timer =>timer +1),1000)\n    return () => clearInterval(interval)\n});\n\n\nconst startTimer = () => {\n  if (!subscription) {\n    const timerSubscription = interval(delay)\n      .pipe(map((v) => v + 1))\n      .subscribe((v) => {\n        setTimer(v + diff);\n      });\n    setSubscription(timerSubscription);\n  } else {\n    subscription.unsubscribe();\n    setTimer(0);\n    setDiff(0);\n    setSubscription(\"\");\n  }\n  };\n\nconst stopTimer  = () => {\n  if (prevent) {\n    setPrevent(false);\n    const timerInstance = setTimeout(function () {\n      setPrevent(true);\n      clearTimeout(timerInstance);\n    }, 300);\n  } else {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n\n    setDiff(timer);\n    setSubscription(\"\");\n  }\n}\n\n  const resetTimer = () => {\n    \n  };\n\n  const waitTimer = () => {\n    if (prevent) {\n      setPrevent(false);\n      const timerInstance = setTimeout(function () {\n        setPrevent(true);\n        clearTimeout(timerInstance);\n      }, 300);\n    } else {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n\n      setDiff(timer);\n      setSubscription(\"\");\n    }\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <header className=\"Stopwatch-header\">\n        <Time timer={timer}/>\n      <div>\n        <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n        {!prevent ? <button onClick={startTimer}>Start</button>\n             : <button onClick={stopTimer}>Stop</button>\n           }\n            <button onDoubleClick={waitTimer}>Wait</button>\n           <button onClick={resetTimer} >Reset</button> \n        </Flexbox> \n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n\n// import './App.css';\n// import { useState,useRef } from 'react';\n// import Flexbox from 'flexbox-react';\n// import Time from './components/Time/Time'\n\n\n\n\n// function Stopwatch() {\n// const [timer, setTimer ] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);\n// const increment = useRef(null);\n\n// const startTimer = () => {\n//     setTimerOn(true)\n//     increment.current = setInterval(() => {\n//       setTimer((timer) => timer + 1)\n//     }, 1000)\n//   }\n\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n\n  // const waitTimer = () => {\n  //   clearInterval(increment.current);\n  //   setTimerOn(false);\n  // };\n\n//   return (\n//     <div className=\"Stopwatch\">\n//       <header className=\"Stopwatch-header\">\n//         <Time timer={timer}/>\n//       <div>\n//         <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n//           {!timerOn ? <button onClick={startTimer}>Start</button>\n//             : <button onClick={stopTimer}>Stop</button>\n//           }\n//            <button onDoubleClick={waitTimer}>Wait</button>\n//           <button onClick={resetTimer} >Reset</button>\n//           </Flexbox>\n//       </div>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}