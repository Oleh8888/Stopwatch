{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/turambar/Projects/React-projects/Stopwatch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time';\nimport { interval, Observable } from \"rxjs\";\n\nfunction Stopwatch() {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  ;\n  let timerStream$ = new Observable(observer => {\n    const interval = setInterval(() => observer.next(timer => timer + 1), 1000);\n    return () => clearInterval(interval);\n  });\n  const subscription = timerStream$.subscribe(timer => setTimer(timer));\n  subscription.unsubscribe();\n\n  const startTimer = () => {\n    setTimerOn(true);\n    timerStream$.subscribe(timer => setTimer(timer));\n  };\n\n  const stopTimer = () => {\n    subscription.unsubscribe();\n  };\n\n  const resetTimer = () => {\n    clearInterval(timerStream$.subscribe(0));\n    setTimerOn(false);\n    setTimer(0);\n    startTimer();\n  };\n\n  const waitTimer = () => {\n    clearInterval(timerStream$.subscribe());\n    setTimerOn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stopwatch\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Stopwatch-header\",\n      children: [/*#__PURE__*/_jsxDEV(Time, {\n        timer: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flexbox, {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          children: [!timerOn ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              startTimer();\n            },\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              stopTimer();\n            },\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onDoubleClick: waitTimer,\n            children: \"Wait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              resetTimer();\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stopwatch, \"i0tXxExQ6quPjayJD6fz8X4rdOU=\");\n\n_c = Stopwatch;\nexport default Stopwatch; // import './App.css';\n// import { useState,useRef } from 'react';\n// import Flexbox from 'flexbox-react';\n// import Time from './components/Time/Time'\n// function Stopwatch() {\n// const [timer, setTimer ] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);\n// const increment = useRef(null);\n// const startTimer = () => {\n//     setTimerOn(true)\n//     increment.current = setInterval(() => {\n//       setTimer((timer) => timer + 1)\n//     }, 1000)\n//   }\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n// const waitTimer = () => {\n//   clearInterval(increment.current);\n//   setTimerOn(false);\n// };\n//   return (\n//     <div className=\"Stopwatch\">\n//       <header className=\"Stopwatch-header\">\n//         <Time timer={timer}/>\n//       <div>\n//         <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n//           {!timerOn ? <button onClick={startTimer}>Start</button>\n//             : <button onClick={stopTimer}>Stop</button>\n//           }\n//            <button onDoubleClick={waitTimer}>Wait</button>\n//           <button onClick={resetTimer} >Reset</button>\n//           </Flexbox>\n//       </div>\n//       </header>\n//     </div>\n//   );\n// }\n// export default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/home/turambar/Projects/React-projects/Stopwatch/src/App.js"],"names":["useState","useEffect","Flexbox","Time","interval","Observable","Stopwatch","timer","setTimer","timerOn","setTimerOn","timerStream$","observer","setInterval","next","clearInterval","subscription","subscribe","unsubscribe","startTimer","stopTimer","resetTimer","waitTimer"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;;AAKA,SAASC,SAAT,GAAqB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBR,QAAQ,CAAC,CAAD,CAAnC;AAEA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAA8C;AAI9C,MAAIW,YAAY,GAAG,IAAIN,UAAJ,CAAeO,QAAQ,IAAI;AAC1C,UAAMR,QAAQ,GAAGS,WAAW,CAAC,MAAMD,QAAQ,CAACE,IAAT,CAAcP,KAAK,IAAGA,KAAK,GAAE,CAA7B,CAAP,EAAuC,IAAvC,CAA5B;AACA,WAAO,MAAMQ,aAAa,CAACX,QAAD,CAA1B;AACH,GAHkB,CAAnB;AAKA,QAAMY,YAAY,GAAGL,YAAY,CAACM,SAAb,CAAuBV,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAAxC,CAArB;AACAS,EAAAA,YAAY,CAACE,WAAb;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvBT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,YAAY,CAACM,SAAb,CAAuBV,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAAxC;AACC,GAHH;;AAKA,QAAMa,SAAS,GAAI,MAAM;AACvBJ,IAAAA,YAAY,CAACE,WAAb;AACD,GAFD;;AAIE,QAAMG,UAAU,GAAG,MAAM;AACvBN,IAAAA,aAAa,CAACJ,YAAY,CAACM,SAAb,CAAuB,CAAvB,CAAD,CAAb;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAW,IAAAA,UAAU;AACX,GALD;;AAOA,QAAMG,SAAS,GAAG,MAAM;AACtBP,IAAAA,aAAa,CAACJ,YAAY,CAACM,SAAb,EAAD,CAAb;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEH;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEA;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,aAAa,EAAC,KAAvB;AAA6B,UAAA,cAAc,EAAC,QAA5C;AAAA,qBACC,CAACE,OAAD,gBAAW;AAAQ,YAAA,OAAO,EAAE,MAAM;AAACU,cAAAA,UAAU;AAAI,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,gBACM;AAAQ,YAAA,OAAO,EAAE,MAAM;AAACC,cAAAA,SAAS;AAAI,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFP,eAII;AAAQ,YAAA,aAAa,EAAEE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKG;AAAQ,YAAA,OAAO,EAAE,MAAM;AAACD,cAAAA,UAAU;AAAI,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GApDQf,S;;KAAAA,S;AAsDT,eAAeA,SAAf,C,CAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import './App.css';\nimport { useState, useEffect} from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time'\nimport { interval, Observable } from \"rxjs\";\n\n\n\n\nfunction Stopwatch() {\nconst [timer, setTimer ] = useState(0);\n\nconst [timerOn, setTimerOn] = useState(false);;\n\n\n\nlet timerStream$ = new Observable(observer => {\n    const interval = setInterval(() => observer.next(timer =>timer +1),1000)\n    return () => clearInterval(interval)\n});\n\nconst subscription = timerStream$.subscribe(timer => setTimer(timer))\nsubscription.unsubscribe();\n\nconst startTimer = () => {\n  setTimerOn(true)\n  timerStream$.subscribe(timer => setTimer(timer))\n  };\n\nconst stopTimer  = () => {\n  subscription.unsubscribe();\n}\n\n  const resetTimer = () => {\n    clearInterval(timerStream$.subscribe(0));\n    setTimerOn(false);\n    setTimer(0);\n    startTimer();\n  };\n\n  const waitTimer = () => {\n    clearInterval(timerStream$.subscribe());\n    setTimerOn(false);\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <header className=\"Stopwatch-header\">\n        <Time timer={timer}/>\n      <div>\n        <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n        {!timerOn ? <button onClick={() => {startTimer();}}>Start</button>\n             : <button onClick={() => {stopTimer();}}>Stop</button>\n           }\n            <button onDoubleClick={waitTimer}>Wait</button>\n           <button onClick={() => {resetTimer();}} >Reset</button> \n        </Flexbox> \n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n\n// import './App.css';\n// import { useState,useRef } from 'react';\n// import Flexbox from 'flexbox-react';\n// import Time from './components/Time/Time'\n\n\n\n\n// function Stopwatch() {\n// const [timer, setTimer ] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);\n// const increment = useRef(null);\n\n// const startTimer = () => {\n//     setTimerOn(true)\n//     increment.current = setInterval(() => {\n//       setTimer((timer) => timer + 1)\n//     }, 1000)\n//   }\n\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n\n  // const waitTimer = () => {\n  //   clearInterval(increment.current);\n  //   setTimerOn(false);\n  // };\n\n//   return (\n//     <div className=\"Stopwatch\">\n//       <header className=\"Stopwatch-header\">\n//         <Time timer={timer}/>\n//       <div>\n//         <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n//           {!timerOn ? <button onClick={startTimer}>Start</button>\n//             : <button onClick={stopTimer}>Stop</button>\n//           }\n//            <button onDoubleClick={waitTimer}>Wait</button>\n//           <button onClick={resetTimer} >Reset</button>\n//           </Flexbox>\n//       </div>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}