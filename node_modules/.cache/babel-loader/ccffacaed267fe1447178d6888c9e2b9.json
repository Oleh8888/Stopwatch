{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/turambar/Projects/React-projects/stopwatch/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction Stopwatch() {\n  const {\n    timerTime\n  } = this.state;\n  let centiseconds = (\"0\" + Math.floor(timerTime / 10) % 100).slice(-2);\n  let seconds = (\"0\" + Math.floor(timerTime / 1000) % 60).slice(-2);\n  let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n  let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stopwatch\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Stopwatch-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stopwatch-display\",\n        children: [hours, \" : \", minutes, \" : \", seconds, \" : \", centiseconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.startTimer,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), this.state.timerOn === true && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.stopTimer,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.startTimer,\n          children: \"Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.resetTimer,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/home/turambar/Projects/React-projects/stopwatch/src/App.js"],"names":["useState","useEffect","Stopwatch","timerTime","state","centiseconds","Math","floor","slice","seconds","minutes","hours","timerOn","startTimer","stopTimer","resetTimer"],"mappings":";;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAgB,KAAKC,KAA3B;AACE,MAAIC,YAAY,GAAG,CAAC,MAAOC,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,EAAvB,IAA6B,GAArC,EAA2CK,KAA3C,CAAiD,CAAC,CAAlD,CAAnB;AACA,MAAIC,OAAO,GAAG,CAAC,MAAOH,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,IAAvB,IAA+B,EAAvC,EAA4CK,KAA5C,CAAkD,CAAC,CAAnD,CAAd;AACA,MAAIE,OAAO,GAAG,CAAC,MAAOJ,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,KAAvB,IAAgC,EAAxC,EAA6CK,KAA7C,CAAmD,CAAC,CAApD,CAAd;AACA,MAAIG,KAAK,GAAG,CAAC,MAAML,IAAI,CAACC,KAAL,CAAWJ,SAAS,GAAG,OAAvB,CAAP,EAAwCK,KAAxC,CAA8C,CAAC,CAA/C,CAAZ;AACF,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,mBACKG,KADL,SACeD,OADf,SAC2BD,OAD3B,SACuCJ,YADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA,mBACC,KAAKD,KAAL,CAAWQ,OAAX,KAAuB,KAAvB,IAAgC,KAAKR,KAAL,CAAWD,SAAX,KAAyB,CAAzD,iBACG;AAAQ,UAAA,OAAO,EAAE,KAAKU,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIG,KAAKT,KAAL,CAAWQ,OAAX,KAAuB,IAAvB,iBACC;AAAQ,UAAA,OAAO,EAAE,KAAKE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAOG,KAAKV,KAAL,CAAWQ,OAAX,KAAuB,KAAvB,IAAgC,KAAKR,KAAL,CAAWD,SAAX,GAAuB,CAAvD,iBACC;AAAQ,UAAA,OAAO,EAAE,KAAKU,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,EAUG,KAAKT,KAAL,CAAWQ,OAAX,KAAuB,KAAvB,IAAgC,KAAKR,KAAL,CAAWD,SAAX,GAAuB,CAAvD,iBACC;AAAQ,UAAA,OAAO,EAAE,KAAKY,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;KA7BQb,S;AA+BT,eAAeA,SAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction Stopwatch() {\n  const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n  return (\n    <div className=\"Stopwatch\">\n      <header className=\"Stopwatch-header\">\n      <div className=\"Stopwatch-display\">\n          {hours} : {minutes} : {seconds} : {centiseconds}\n      </div>\n      <div>\n      {this.state.timerOn === false && this.state.timerTime === 0 && (\n          <button onClick={this.startTimer}>Start</button>\n        )}\n        {this.state.timerOn === true && (\n          <button onClick={this.stopTimer}>Stop</button>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <button onClick={this.startTimer}>Resume</button>\n        )}\n        {this.state.timerOn === false && this.state.timerTime > 0 && (\n          <button onClick={this.resetTimer}>Reset</button>\n        )}\n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}