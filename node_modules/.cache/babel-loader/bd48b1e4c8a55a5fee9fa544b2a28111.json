{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/turambar/Projects/React-projects/stopwatch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useRef } from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time';\nimport useDoubleClick from 'use-double-click';\n\nfunction Stopwatch() {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  const increment = useRef(null); // useEffect( () => {\n  // },[]);\n\n  const startTimer = () => {\n    setTimerOn(true);\n    increment.current = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n  };\n\n  const stopTimer = () => {\n    clearInterval(increment.current);\n    setTimerOn(false);\n    setTimer(0);\n  };\n\n  useDoubleClick({\n    onSingleClick: e => {\n      console.log(e, 'single click');\n    },\n    onDoubleClick: e => {\n      console.log(e, 'double click');\n      waitTimer();\n    },\n    latency: 250\n  });\n\n  const waitTimer = () => {\n    clearInterval(increment.current);\n  };\n\n  const resetTimer = () => {\n    clearInterval(increment.current);\n    setTimerOn(false);\n    setTimer(0);\n    startTimer();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stopwatch\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Stopwatch-header\",\n      children: [/*#__PURE__*/_jsxDEV(Time, {\n        timer: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flexbox, {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          children: [!timerOn ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopTimer,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            ref: buttonRef,\n            children: \"Wait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTimer,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stopwatch, \"Vrc4SmqMlXnqAnWTgDnC9QOiB1o=\", false, function () {\n  return [useDoubleClick];\n});\n\n_c = Stopwatch;\nexport default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/home/turambar/Projects/React-projects/stopwatch/src/App.js"],"names":["useState","useRef","Flexbox","Time","useDoubleClick","Stopwatch","timer","setTimer","timerOn","setTimerOn","increment","startTimer","current","setInterval","stopTimer","clearInterval","onSingleClick","e","console","log","onDoubleClick","waitTimer","latency","resetTimer","buttonRef"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBP,QAAQ,CAAC,CAAD,CAAnC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMU,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB,CAHqB,CAKrB;AAEA;;AAEE,QAAMU,UAAU,GAAG,MAAM;AACvBF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,SAAS,CAACE,OAAV,GAAoBC,WAAW,CAAC,MAAM;AACpCN,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD,KAF8B,EAE5B,IAF4B,CAA/B;AAGD,GALD;;AAOF,QAAMQ,SAAS,GAAI,MAAM;AACvBC,IAAAA,aAAa,CAACL,SAAS,CAACE,OAAX,CAAb;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAJD;;AAMAH,EAAAA,cAAc,CAAC;AACbY,IAAAA,aAAa,EAAEC,CAAC,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAAe,cAAf;AACD,KAHY;AAIbG,IAAAA,aAAa,EAAEH,CAAC,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAAe,cAAf;AACAI,MAAAA,SAAS;AACV,KAPY;AAQbC,IAAAA,OAAO,EAAE;AARI,GAAD,CAAd;;AAYE,QAAMD,SAAS,GAAG,MAAM;AACtBN,IAAAA,aAAa,CAACL,SAAS,CAACE,OAAX,CAAb;AACD,GAFD;;AAIA,QAAMW,UAAU,GAAG,MAAM;AACvBR,IAAAA,aAAa,CAACL,SAAS,CAACE,OAAX,CAAb;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAI,IAAAA,UAAU;AACX,GALD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEL;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEA;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,aAAa,EAAC,KAAvB;AAA6B,UAAA,cAAc,EAAC,QAA5C;AAAA,qBACC,CAACE,OAAD,gBAAW;AAAQ,YAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,gBACO;AAAQ,YAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFR,eAIE;AAAQ,YAAA,GAAG,EAAEU,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAhEQlB,S;UAsBTD,c;;;KAtBSC,S;AAkET,eAAeA,SAAf","sourcesContent":["import './App.css';\nimport { useState,useRef } from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time'\nimport useDoubleClick from 'use-double-click';\n\nfunction Stopwatch() {\nconst [timer, setTimer ] = useState(0)\nconst [timerOn, setTimerOn] = useState(false)\nconst increment = useRef(null)\n\n// useEffect( () => {\n \n// },[]);\n\n  const startTimer = () => {\n    setTimerOn(true)\n    increment.current = setInterval(() => {\n      setTimer((timer) => timer + 1)\n    }, 1000)\n  }\n\nconst stopTimer  = () => {\n  clearInterval(increment.current)\n  setTimerOn(false)\n  setTimer(0)\n}\n\nuseDoubleClick({\n  onSingleClick: e => {\n    console.log(e, 'single click');\n  },\n  onDoubleClick: e => {\n    console.log(e, 'double click');\n    waitTimer()\n  },\n  latency: 250\n});\n\n\n  const waitTimer = () => {\n    clearInterval(increment.current)\n  };\n\n  const resetTimer = () => {\n    clearInterval(increment.current)\n    setTimerOn(false)\n    setTimer(0)\n    startTimer()\n  };\n\n \n    \n\n  return (\n    <div className=\"Stopwatch\">\n      <header className=\"Stopwatch-header\">\n        <Time timer={timer}/>\n      <div>\n        <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n        {!timerOn ? <button onClick={startTimer}>Start</button>\n              : <button onClick={stopTimer}>Stop</button>\n          }\n          <button ref={buttonRef}>Wait</button>\n          <button onClick={resetTimer} >Reset</button>\n          </Flexbox>\n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}