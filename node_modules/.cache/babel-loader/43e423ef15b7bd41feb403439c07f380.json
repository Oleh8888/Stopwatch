{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/turambar/Projects/React-projects/Stopwatch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time';\nimport { Observable } from \"rxjs\";\nimport { interval } from 'rxjs';\n\nfunction Stopwatch() {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [stopIncrement, setStopIncrement] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n  ;\n  let increment = null;\n  const timerStream = new Observable(subscriber => {\n    subscriber.next(timer);\n    const intervalId = setInterval(() => subscriber.next(timer => timer + 1), 1000);\n    return function unsubscribe() {\n      clearInterval(intervalId);\n    };\n  });\n  const observable = interval(1000);\n  const subscription = observable.subscribe(x => console.log(x));\n\n  const startTimer = () => {\n    setTimerOn(true);\n    timerStream.subscribe(timer => setTimer(timer));\n  };\n\n  const stopTimer = () => {\n    subscription.unsubscribe();\n  };\n\n  const resetTimer = () => {\n    clearInterval(timerStream.subscribe(0));\n    setTimerOn(false);\n    setTimer(0);\n    startTimer();\n  };\n\n  const waitTimer = () => {\n    clearInterval(timerStream.subscribe());\n    setTimerOn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Stopwatch\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Stopwatch-header\",\n      children: [/*#__PURE__*/_jsxDEV(Time, {\n        timer: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flexbox, {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          children: [!timerOn ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopTimer,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onDoubleClick: waitTimer,\n            children: \"Wait\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetTimer,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stopwatch, \"nQbZqDbP1S5YUJMxrHcQ3GHqGto=\");\n\n_c = Stopwatch;\nexport default Stopwatch; // import './App.css';\n// import { useState,useRef } from 'react';\n// import Flexbox from 'flexbox-react';\n// import Time from './components/Time/Time'\n// function Stopwatch() {\n// const [timer, setTimer ] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);\n// const increment = useRef(null);\n// const startTimer = () => {\n//     setTimerOn(true)\n//     increment.current = setInterval(() => {\n//       setTimer((timer) => timer + 1)\n//     }, 1000)\n//   }\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n// const waitTimer = () => {\n//   clearInterval(increment.current);\n//   setTimerOn(false);\n// };\n//   return (\n//     <div className=\"Stopwatch\">\n//       <header className=\"Stopwatch-header\">\n//         <Time timer={timer}/>\n//       <div>\n//         <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n//           {!timerOn ? <button onClick={startTimer}>Start</button>\n//             : <button onClick={stopTimer}>Stop</button>\n//           }\n//            <button onDoubleClick={waitTimer}>Wait</button>\n//           <button onClick={resetTimer} >Reset</button>\n//           </Flexbox>\n//       </div>\n//       </header>\n//     </div>\n//   );\n// }\n// export default Stopwatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"sources":["/home/turambar/Projects/React-projects/Stopwatch/src/App.js"],"names":["useState","useEffect","Flexbox","Time","Observable","interval","Stopwatch","timer","setTimer","stopIncrement","setStopIncrement","timerOn","setTimerOn","increment","timerStream","subscriber","next","intervalId","setInterval","unsubscribe","clearInterval","observable","subscription","subscribe","x","console","log","startTimer","stopTimer","resetTimer","waitTimer"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState, useEffect} from 'react';\nimport Flexbox from 'flexbox-react';\nimport Time from './components/Time/Time'\nimport { Observable } from \"rxjs\";\nimport { interval } from 'rxjs';\n\n\n\nfunction Stopwatch() {\nconst [timer, setTimer ] = useState(0);\nconst [stopIncrement, setStopIncrement] = useState(0);\nconst [timerOn, setTimerOn] = useState(false);;\nlet increment = null;\n\nconst timerStream = new Observable(subscriber => {\n  subscriber.next(timer)\n  const intervalId =  setInterval(() => subscriber.next(timer => timer + 1),1000);\n  return function unsubscribe() {\n    clearInterval(intervalId);\n  };\n});\n\nconst observable = interval(1000);\nconst subscription = observable.subscribe(x => console.log(x));\n\nconst startTimer = () => {\n  setTimerOn(true)\n  timerStream.subscribe(timer => setTimer(timer))\n  }\n\nconst stopTimer  = () => {\n  subscription.unsubscribe();\n}\n\n  const resetTimer = () => {\n    clearInterval(timerStream.subscribe(0));\n    setTimerOn(false);\n    setTimer(0);\n    startTimer();\n  };\n\n  const waitTimer = () => {\n    clearInterval(timerStream.subscribe());\n    setTimerOn(false);\n  };\n\n  return (\n    <div className=\"Stopwatch\">\n      <header className=\"Stopwatch-header\">\n        <Time timer={timer}/>\n      <div>\n        <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n        {!timerOn ? <button onClick={startTimer}>Start</button>\n             : <button onClick={stopTimer}>Stop</button>\n           }\n            <button onDoubleClick={waitTimer}>Wait</button>\n           <button onClick={resetTimer} >Reset</button> \n        </Flexbox> \n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Stopwatch;\n\n// import './App.css';\n// import { useState,useRef } from 'react';\n// import Flexbox from 'flexbox-react';\n// import Time from './components/Time/Time'\n\n\n\n\n// function Stopwatch() {\n// const [timer, setTimer ] = useState(0);\n// const [timerOn, setTimerOn] = useState(false);\n// const increment = useRef(null);\n\n// const startTimer = () => {\n//     setTimerOn(true)\n//     increment.current = setInterval(() => {\n//       setTimer((timer) => timer + 1)\n//     }, 1000)\n//   }\n\n// const stopTimer  = () => {\n//   clearInterval(increment.current);\n//   setTimer(0);\n// }\n\n//   const resetTimer = () => {\n//     clearInterval(increment.current);\n//     setTimerOn(false);\n//     setTimer(0);\n//     startTimer();\n//   };\n\n  // const waitTimer = () => {\n  //   clearInterval(increment.current);\n  //   setTimerOn(false);\n  // };\n\n//   return (\n//     <div className=\"Stopwatch\">\n//       <header className=\"Stopwatch-header\">\n//         <Time timer={timer}/>\n//       <div>\n//         <Flexbox flexDirection=\"row\" justifyContent=\"center\">\n//           {!timerOn ? <button onClick={startTimer}>Start</button>\n//             : <button onClick={stopTimer}>Stop</button>\n//           }\n//            <button onDoubleClick={waitTimer}>Wait</button>\n//           <button onClick={resetTimer} >Reset</button>\n//           </Flexbox>\n//       </div>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}